Ryan Bartholomew 
StudentID: 917656984
Database Systems II (CS 6232)
Spring 2025
Homework 6


b. The link to my private GitHub Repository for this project is https://github.com/rbartho1/Mountain_Goats_Bike_App.


c. Below is my audit table creation query:

USE BikeStores;

DROP TABLE IF EXISTS [BikeStores].[sales].[bikestore_audit];

CREATE TABLE [BikeStores].[sales].[bikestore_audit]
( [id] BIGINT IDENTITY(1,1) NOT NULL PRIMARY KEY,
[audit_timestamp] DATETIME NOT NULL,
[activity_type] VARCHAR(255),
[record_info] NTEXT NOT NULL);


d. Below is the full query for the trigger I created:

CREATE TRIGGER the_auditor
ON [BikeStores].[sales].[orders]
AFTER INSERT, UPDATE
AS
BEGIN
    SET NOCOUNT ON;
    INSERT INTO [BikeStores].[sales].[bikestore_audit]
	([audit_timestamp], 
	[activity_type], 
	[record_info])
	SELECT
	GETDATE(),
	'order created',
	CAST(order_creation.[order_id] AS NVARCHAR(255)) + ', ' + CAST(order_creation.[customer_id] AS NVARCHAR(255)) + ', ' + CAST(order_creation.[staff_id] AS NVARCHAR(255)) + ', ' + CAST(order_creation.[store_id] AS NVARCHAR(255))
	FROM inserted order_creation
	UNION ALL
	SELECT
	GETDATE(),
	'order updated',
	CAST(order_update.[order_id] AS NVARCHAR(255)) + ', ' + CAST(order_update.[customer_id] AS NVARCHAR(255)) + ', ' + CAST(order_update.[staff_id] AS NVARCHAR(255)) + ', ' + CAST(order_update.[store_id] AS NVARCHAR(255))
	FROM inserted order_update;
END;


e. Below is my complete procedure creation query for the procedure I created to test my trigger:

CREATE OR ALTER PROCEDURE AuditTestProcedure
	@id_of_customer INT,
	@id_of_store INT,
	@id_of_staff INT,
	@product1_id INT,
	@product2_id INT,
	@quantity1 INT,
	@quantity2 INT,
	@listed_price1 DECIMAL(10,2),
	@listed_price2 DECIMAL(10,2),
	@the_first_discount DECIMAL(4,2),
	@the_second_discount DECIMAL (4,2)
AS
BEGIN
	DECLARE @NewlyCreatedOrderID INT;
	
	BEGIN TRANSACTION;

		IF NOT EXISTS (SELECT 1 FROM [BikeStores].[sales].[order_items] WHERE [product_id] = @product1_id)
		BEGIN
			RAISERROR('A requested product does not exist in the database', 16, 5);
			ROLLBACK;
			RETURN;
		END

		IF NOT EXISTS (SELECT 1 FROM [BikeStores].[sales].[order_items] WHERE [product_id] = @product2_id)
		BEGIN
			RAISERROR('A requested product does not exist in the database', 16, 5);
			ROLLBACK;
			RETURN;
		END
	
	BEGIN TRY
		INSERT INTO [BikeStores].[sales].[orders]
		([customer_id],
			[order_status],
			[order_date],
			[required_date],
			[store_id],
			[staff_id])
		VALUES
		(@id_of_customer, 1, GETDATE(), GETDATE(), @id_of_store, @id_of_staff);
	
		SET @NewlyCreatedOrderID = SCOPE_IDENTITY(); 
		INSERT INTO [BikeStores].[sales].[order_items]
		([order_id],
			[item_id],
			[product_id],
			[quantity],
			[list_price],
			[discount])
		VALUES
		(@NewlyCreatedOrderID, 1, @product1_id, @quantity1, @listed_price1, @the_first_discount), (@NewlyCreatedOrderID, 2, @product2_id, @quantity2, @listed_price2, @the_second_discount); 
		COMMIT;

	END TRY

	BEGIN CATCH
		RAISERROR('One of the requested ids was not in the database.', 16, 5);
		ROLLBACK;
	END CATCH;

END;